PC: 0
Reg:
reg_op1: SIMD[00000000/0 00000000/0 00000000/0 00000000/0 00000000/0 00000000/0 00000000/0 00000000/0 ]
reg_op2: SIMD[00000000/0 00000000/0 00000000/0 00000000/0 00000000/0 00000000/0 00000000/0 00000000/0 ]
reg_res: SIMD[00000000/0 00000000/0 00000000/0 00000000/0 00000000/0 00000000/0 00000000/0 00000000/0 ]
reg_north_in: SIMD[00000000/0 00000000/0 00000000/0 00000000/0 00000000/0 00000000/0 00000000/0 00000000/0 ]
reg_south_in: SIMD[00000000/0 00000000/0 00000000/0 00000000/0 00000000/0 00000000/0 00000000/0 00000000/0 ]
reg_west_in: SIMD[00000000/0 00000000/0 00000000/0 00000000/0 00000000/0 00000000/0 00000000/0 00000000/0 ]
reg_east_in: SIMD[00000000/0 00000000/0 00000000/0 00000000/0 00000000/0 00000000/0 00000000/0 00000000/0 ]
reg_predicate: false
Sig:
wire_alu_out: Some(SIMD[00011000/0.0625 00001100/0.0234375 00000000/0 00000000/0 00000000/0 00000000/0 00000000/0 00000000/0 ])
wire_north_in: None
wire_south_in: None
wire_west_in: None
wire_east_in: None
wire_north_out: None
wire_south_out: None
wire_west_out: None
wire_east_out: None
Conf: operation: LOAD 0
switch_config: {
    Open -> predicate,
    Open -> south_out,
    Open -> west_out,
    Open -> north_out,
    Open -> east_out,
    Open -> alu_op2,
    Open -> alu_op1,
};
input_register_bypass: {all};
input_register_write: {};
Previous op is load: Some(true)
